name: Deploy RideHub

on:
  push:
    branches:
      - main  # or your preferred branch

jobs:
  deploy:
    environment: secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to VPS (ridehub)
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VPS_HOST_INFRA }}
          username: root
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            set -euo pipefail
      
            echo "=== 🛠 Starting RideHub deployment ==="
            echo "Host identity:"
            uname -a
            hostname -A || true
            ip -4 addr show eth0 | sed -n 's/ *inet //p' || true
      
            BASE_DIR="/root/repositories"
            REPO_DIR="$BASE_DIR/ridehub"
            REPO_URL="https://github.com/phungle2508/ridehub.git"
            BRANCH="main"
      
            echo "📁 Ensuring base dir: $BASE_DIR"
            mkdir -p "$BASE_DIR"
      
            if [ ! -d "$REPO_DIR/.git" ]; then
              echo "🐣 First run on this host → cloning repo"
              git clone --recursive "$REPO_URL" "$REPO_DIR"
            fi
      
            cd "$REPO_DIR"
      
            echo "🔏 Marking repo as safe (just in case)"
            git config --global --add safe.directory "$REPO_DIR"
      
            echo "📥 Fetch & hard reset to origin/$BRANCH"
            git fetch --all --prune
            git reset --hard "origin/$BRANCH"
            git clean -fdx
      
            echo "🔁 Sync & update submodules"
            git submodule sync --recursive
            # If you want submodules to track their upstream default branches:
            # git submodule update --init --recursive --remote
            git submodule update --init --recursive
      
            echo "🌿 Force submodules to their origin/main (optional)"
            git submodule foreach --recursive '
              set -e
              git fetch --all --prune || true
              # Try origin/main; if it doesn't exist, fall back to the checked-in commit
              if git rev-parse --verify origin/main >/dev/null 2>&1; then
                git reset --hard origin/main
              else
                echo "No origin/main for $(pwd), keeping recorded commit."
              fi
              git clean -fdx || true
            '
      
            echo "✅ Done updating main repo & submodules"
